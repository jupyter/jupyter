# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Jupyter Team, https://jupyter.org
# This file is distributed under the same license as the Jupyter
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# 
# Translators:
# R.J Lelis <renatojlelis@gmail.com>, 2019
# Caaddss <carolinedantas11@gmail.com>, 2019
# Melissa Weber Mendonça <melissawm@gmail.com>, 2019
# Lilian Corrêa <lilianflavia.cor@hotmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Jupyter Documentation 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-04 19:51-0400\n"
"PO-Revision-Date: 2019-07-27 11:58+0000\n"
"Last-Translator: Lilian Corrêa <lilianflavia.cor@hotmail.com>, 2019\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/project-jupyter/teams/100899/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 0bc823304e0d4ab39f2774b29044df9b
#: ../../source/architecture/content-architecture.rst:2
msgid "Architecture Guides"
msgstr "Guias de arquitetura"

# 8ce5c1bb3b244604b361cd2384066f68
#: ../../source/architecture/how_jupyter_ipython_work.rst:2
msgid "How IPython and Jupyter Notebook work"
msgstr "Como IPython e o Jupyter Notebook funcionam"

# 242c15d658d64a13a2b8b13502845298
#: ../../source/architecture/how_jupyter_ipython_work.rst:5
msgid "Contents"
msgstr "Conteúdo"

# a7b9fc6771f845528e8f7135c51754fa
#: ../../source/architecture/how_jupyter_ipython_work.rst:8
msgid "Abstract"
msgstr "Abstrato"

# 3b9b38491da4493b95225b77bcd32438
#: ../../source/architecture/how_jupyter_ipython_work.rst:9
msgid ""
"This section focuses on IPython and Jupyter notebook and how they interact. "
"When we discuss ``IPython``, we talk about two fundamental roles:"
msgstr ""
"Esta seção foca no IPython e no Jupyter notebook e como eles interagem. "
"Quando nos discutimos sobre ``IPython``, nos falamos sobre dois papeis "
"fundamentais:"

# 676993980a9e4a9082f9f313e09af108
#: ../../source/architecture/how_jupyter_ipython_work.rst:12
msgid "Terminal IPython as the familiar REPL"
msgstr "Terminal do IPython como o familiar REPL"

# 5164fcd91a8a4700ac734562245773ad
#: ../../source/architecture/how_jupyter_ipython_work.rst:13
msgid ""
"The IPython kernel that provides computation and communication with the "
"frontend interfaces, like the notebook"
msgstr ""
"The IPython kernel que fornece o cálculo e  a comunicação com as interfaces "
"de frontend como o notebook"

# e79b4b9cf0d4461e8c91e35c54941346
#: ../../source/architecture/how_jupyter_ipython_work.rst:16
msgid ""
"Jupyter Notebook and its flexible interface extends the notebook beyond code"
" to visualization, multimedia, collaboration, and more."
msgstr ""
"Jupyter Notebook e a sua interface flexível estende o notebook além do "
"código para visualização, multimídia, colaboração e muito mais"

# f0e8484a13374e5ba11bc5673feecc30
#: ../../source/architecture/how_jupyter_ipython_work.rst:20
msgid "Terminal IPython"
msgstr "Terminal IPython"

# d52946417b8a4a04a551622ce78e0c78
#: ../../source/architecture/how_jupyter_ipython_work.rst:22
msgid ""
"When you type ``ipython``, you get the original IPython interface, running "
"in the terminal. It does something like this::"
msgstr ""
"Quando você digita ``ipython``, você obtém a interface original do IPython, "
"rodando no terminal. É algo como isso::"

# 9c51878d67554820815080da49295cb3
#: ../../source/architecture/how_jupyter_ipython_work.rst:29
msgid ""
"Of course, it's much more complex, because it has to deal with multi-line "
"code, tab completion using :mod:`readline`, magic commands, and so on. But "
"the model is like code example: prompt the user for some code, and when "
"they've entered it, execute it in the same process. This model is often "
"called a :term:`REPL`, or Read-Eval-Print-Loop."
msgstr ""
"Claro, isso é muito mais complexo, por lidar com muitas linhas de código, "
"preenchimento utilizando :mod:`readline`, comandos mágicos e outros. Mas o "
"modelo é como o exemplo: solicita-se ao usuário algum código e quando ele o "
"insere, é executado no mesmo processo. Esse modelo é frequentemente chamado "
"de `REPL`, ou Ler-Avaliar-Imprimir-Repetir"

# 6948d86fd4fd47a1a4ca54d29e72d46e
#: ../../source/architecture/how_jupyter_ipython_work.rst:36
msgid "The IPython Kernel"
msgstr "O IPython Kernel"

# 61f9b43b0f3148a1b6c8c770dbe95970
#: ../../source/architecture/how_jupyter_ipython_work.rst:38
msgid ""
"All the other interfaces —- the Notebook, the Qt console, ``ipython "
"console`` in the terminal, and third party interfaces —- use the IPython "
"Kernel. The IPython Kernel is a separate process which is responsible for "
"running user code, and things like computing possible completions. "
"Frontends, like the notebook or the Qt console, communicate with the IPython"
" Kernel using JSON messages sent over `ZeroMQ <http://zeromq.org/>`_ "
"sockets; the protocol used between the frontends and the IPython Kernel is "
"described in :ref:`jupyterclient:messaging`."
msgstr ""
"Todas as outras interfaces --- o Notebook, o console Qt, ``ipython console`` no terminal e interfarces terceiras --- usam o kernel do IPython. O Kernek do IPython é um processo de separação que é responsável por rodar o código do usuário e calcular coisas como os possíveis\n"
"preenchimentos.  Interfaces de frontend como o notebook ou o console Qt, se comunicam com o Kernel IPython utilizando mensagens JSON através do `ZeroMQ <http://zeromq.org/>`_ sockets; o protocolo utilizando entre os frontend e o IPython Kernel está descrito em :ref:`jupyterclient:messaging`."

# 6560f963da914c78b12c61e8795a9852
#: ../../source/architecture/how_jupyter_ipython_work.rst:47
msgid ""
"The core execution machinery for the kernel is shared with terminal IPython:"
msgstr ""
"O mecanismo de execução principal para o kernel é compartilhado com o "
"terminal IPython"

# b5bd0a2f608542fe92f8b57ddcb9ea7b
#: ../../source/architecture/how_jupyter_ipython_work.rst:51
msgid ""
"A kernel process can be connected to more than one frontend simultaneously. "
"In this case, the different frontends will have access to the same "
"variables."
msgstr ""
"Um processo do kernel pode ser conectado com mais de um frontend "
"simultaneamente.Nesse caso, diferentes frontends terão acesso as mesmas "
"variáveis"

# 59dd6f3fbb4a46008c898b307aec5a25
#: ../../source/architecture/how_jupyter_ipython_work.rst:56
msgid ""
"This design was intended to allow easy development of different frontends "
"based on the same kernel, but it also made it possible to support new "
"languages in the same frontends, by developing kernels in those languages, "
"and we are refining IPython to make that more practical."
msgstr ""
"Esse design foi desenvolvido para permitir um fácil desenvolvimento de "
"diferentes frontends baseados no mesmo kernel, como também permitiu o "
"suporte a novas linguagens nos mesmos frontends, desenvolvendo kernels "
"nessas linguagens, e estamos refinando IPython para tornar isso mais prático"

# e35918a2fb124784a83c135812faf800
#: ../../source/architecture/how_jupyter_ipython_work.rst:61
msgid ""
"Today, there are two ways to develop a kernel for another language. Wrapper "
"kernels reuse the communications machinery from IPython, and implement only "
"the core execution part. Native kernels implement execution and "
"communications in the target language:"
msgstr ""
"Hoje, existem duas maneiras de desenvolver um kernel para outra linguagem. "
"Wrapper kernels reutilizam o mecanismo de comunicações do IPython, e "
"implementam apenas a parte da execução central. Kernels nativos implementam "
"a execução e a comunicação na linguagem alvo:"

# 3395f44193b54f5cb9b9d380fa4a16bd
#: ../../source/architecture/how_jupyter_ipython_work.rst:68
msgid ""
"Wrapper kernels are easier to write quickly for languages that have good "
"Python wrappers, like `octave_kernel "
"<https://pypi.python.org/pypi/octave_kernel>`_, or languages where it's "
"impractical to implement the communications machinery, like `bash_kernel "
"<https://pypi.python.org/pypi/bash_kernel>`_. Native kernels are likely to "
"be better maintained by the community using them, like `IJulia "
"<https://github.com/JuliaLang/IJulia.jl>`_ or `IHaskell "
"<https://github.com/gibiansky/IHaskell>`_."
msgstr ""
"É mais fácil escrever wrapper kernels rapidamente para linguagens que tem "
"bons wrappers Python, como o `octave_kernel "
"<https://pypi.python.org/pypi/octave_kernel>`_, ou linguagens onde não é "
"prático implementar o mecanismo de comunicação, como o `bash_kernel "
"<https://pypi.python.org/pypi/bash_kernel>`_. Kernels nativos tem mais "
"probabilidade de serem mantidos pela comunidade, como o `IJulia "
"<https://github.com/JuliaLang/IJulia.jl>`_ ou o `IHaskell "
"<https://github.com/gibiansky/IHaskell>`_."

# 59d8323c382a4adeb3d622424943b708
#: ../../source/architecture/how_jupyter_ipython_work.rst:78
msgid ":ref:`jupyterclient:kernels`"
msgstr ":ref:`jupyterclient:kernels`"

# 3418914ee39240879155089a0b29a69e
#: ../../source/architecture/how_jupyter_ipython_work.rst:80
msgid ":ref:`Kernels <kernels-langs>`"
msgstr ":ref:`Kernels<kernels-langs>`"

# 4866548d799b4cfc95159d7494d66afb
#: ../../source/architecture/how_jupyter_ipython_work.rst:83
msgid "Notebooks"
msgstr "Notebooks"

# f414110d9cde4b048d6d4d0c65f274dd
#: ../../source/architecture/how_jupyter_ipython_work.rst:85
msgid ""
"The Notebook frontend does something extra. In addition to running your "
"code, it stores code and output, together with markdown notes, in an "
"editable document called a notebook. When you save it, this is sent from "
"your browser to the notebook server, which saves it on disk as a JSON file "
"with a ``.ipynb`` extension."
msgstr ""
"O frontend do Notebook faz algo extra. Além de rodar o seu código, ele "
"armazena código e resultado, juntamente com notas de remarcação, em um "
"documento editável chamado notebook. Quando você o salva, ele é enviado do "
"seu navegador para o servidor do notebook, que o salva em um disco como um "
"arquivo JSON com extensão ``.ipynb``. "

# ce4a6fb377344df295e9512b1d36743c
#: ../../source/architecture/how_jupyter_ipython_work.rst:93
msgid ""
"The notebook server, not the kernel, is responsible for saving and loading "
"notebooks, so you can edit notebooks even if you don't have the kernel for "
"that language—you just won't be able to run code. The kernel doesn't know "
"anything about the notebook document: it just gets sent cells of code to "
"execute when the user runs them."
msgstr ""
"O servidor de notebooks, e não o kernel, é responsável por salvar e carregar"
" notebooks, de modo que você possa editá-los mesmo que você não tenha o "
"kernel para aquela linguagem—você apenas não poderá executar código. O "
"kernel não sabe nada sobre o documento notebook: ele apenas recebe células "
"de código para executar quando o usuário as aciona."

# 9041dc2c7e0b46e19e1694f6bb081592
#: ../../source/architecture/how_jupyter_ipython_work.rst:100
msgid "Exporting notebooks to other formats"
msgstr "Exportando notebooks para outros formatos"

# dedd7458edfc44a99f423e2a9b8e1d93
#: ../../source/architecture/how_jupyter_ipython_work.rst:102
msgid ""
"The Nbconvert tool in Jupyter converts notebook files to other formats, such"
" as HTML, LaTeX, or reStructuredText. This conversion goes through a series "
"of steps:"
msgstr ""
"A ferramenta Nbconvert no Jupyter converte arquivos notebook para outros "
"formatos, como HTML, LaTeX, ou reStructuredText. Esta conversão ocorre "
"através de uma série de passos:"

# 082ebb9d5777479da8f71672f538c484
#: ../../source/architecture/how_jupyter_ipython_work.rst:108
msgid ""
"Preprocessors modify the notebook in memory. E.g. ExecutePreprocessor runs "
"the code in the notebook and updates the output."
msgstr ""
"Pré-processadores modificam o notebook na memória. Por exemplo, "
"ExecutePreprocessor executa o código no notebook e atualiza o resultado."

# c6be8db7ca164f379d97800723004956
#: ../../source/architecture/how_jupyter_ipython_work.rst:110
msgid ""
"An exporter converts the notebook to another file format. Most of the "
"exporters use templates for this."
msgstr ""
"Um exportador converte o notebook para outro formato de arquivo. A maioria "
"dos exportadores usa templates para esse fim."

# 9de2fa198489488fa316b950d1228fa3
#: ../../source/architecture/how_jupyter_ipython_work.rst:112
msgid "Postprocessors work on the file produced by exporting."
msgstr "Pós-processadores trabalham no arquivo produzido após a exportação."

# e00d7f3b870a40879882ee53ed417463
#: ../../source/architecture/how_jupyter_ipython_work.rst:114
msgid ""
"The `nbviewer <http://nbviewer.jupyter.org/>`_ website uses nbconvert with "
"the HTML exporter. When you give it a URL, it fetches the notebook from that"
" URL, converts it to HTML, and serves that HTML to you."
msgstr ""
"O site `nbviewer <http://nbviewer.jupyter.org/>`_ utiliza nbconvert com o "
"exportador HTML. Quando você fornece uma URL para ele, ele busca o notebook "
"dessa URL, converte-o para HTML, e mostra esse HTML para você."

# e30efeea3614465f95ff49220796d182
#: ../../source/architecture/how_jupyter_ipython_work.rst:119
msgid "IPython.parallel"
msgstr "IPython.parallel"

# 074d0dac254c44b58ea96c7b4a451d27
#: ../../source/architecture/how_jupyter_ipython_work.rst:121
msgid ""
"IPython also includes a parallel computing framework, `IPython.parallel "
"<https://ipyparallel.readthedocs.io/en/latest/>`_. This allows you to "
"control many individual engines, which are an extended version of the "
"IPython kernel described above."
msgstr ""
"O IPython também inclui uma framework de computação paralela, "
"`IPython.parallel <https://ipyparallel.readthedocs.io/en/latest/>`_. Isso "
"permite que você controle muitos engines individuais, que são uma versão "
"extendida do IPython kernel descrito acima."

# 0118a72a2b1e4c14800c1c3dd77b6c4e
#: ../../source/architecture/visual_overview.rst:2
msgid "A Visual Overview of Projects"
msgstr "Uma Visão Geral dos Projetos"

# cc1b649f66b949ebb3984ea361c9ee45
#: ../../source/architecture/visual_overview.rst:4
msgid "**A high level visual overview of project relationships**"
msgstr "**Uma visão geral visual de alto nível das relações de projeto**"
